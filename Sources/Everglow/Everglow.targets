<Project>
	<UsingTask TaskName="ReadAssets"
		TaskFactory="CodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<AssetLists ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
			<Assets ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
			<AssetPath ParameterType="System.String"
				Required="true" />
		</ParameterGroup>
		<Task>
			<Code Type="Fragment"
				Language="cs">
				<![CDATA[
          	List<ITaskItem> assets = new List<ITaskItem>();
						foreach (var list in AssetLists)
						{
							var name = Path.GetFileNameWithoutExtension(list.GetMetadata("Filename"));
							var lines = File.ReadAllLines(list.ItemSpec);
							assets.AddRange(lines.Select(line =>
							{
								var ext = Path.GetExtension(line);
								if(ext == ".fx")
									line = Path.ChangeExtension(line, "xnb");
								else
									line = Path.ChangeExtension(line, "rawimg");
								return new TaskItem(AssetPath + name + '\\' + line);
							}));
						}
						Assets = assets.ToArray();
        ]]>
			</Code>
		</Task>
	</UsingTask>
	<UsingTask TaskName="ReadResources"
		TaskFactory="CodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<ResourceLists ParameterType="Microsoft.Build.Framework.ITaskItem[]"
				Required="true" />
			<Resources ParameterType="Microsoft.Build.Framework.ITaskItem[]"
				Output="true" />
		</ParameterGroup>
		<Task>
			<Code Type="Fragment"
				Language="cs">
				<![CDATA[
          	List<ITaskItem> resources = new List<ITaskItem>();
						foreach (var list in ResourceLists)
						{
							var name = Path.GetFileNameWithoutExtension(list.GetMetadata("Filename"));
							var lines = File.ReadAllLines(list.ItemSpec);
							resources.AddRange(lines.Select(line =>
							{
								var ext = Path.GetExtension(line);
								var item = name == "Commons" ? new TaskItem("..\\Everglow.Function\\" + line) : new TaskItem("..\\Modules\\" + name + '\\' + line);
								item.SetMetadata("Path", name + '\\' + line);
								return item;
							}));
						}
						Resources = resources.ToArray();
        ]]>
			</Code>
		</Task>
	</UsingTask>

	<Target Name="PrepareBuildEverglow"
		BeforeTargets="BuildMod">
		<ItemGroup>
			<AssetLists Include="@(ModuleReference->'$(BaseIntermediateOutputPath)%(Filename).asset.list')" />
			<AssetLists Include="$(BaseIntermediateOutputPath)Commons.asset.list" />
			<ResourceLists Include="@(ModuleReference->'$(BaseIntermediateOutputPath)%(Filename).resource.list')" />
			<ResourceLists Include="$(BaseIntermediateOutputPath)Commons.resource.list" />
		</ItemGroup>
		<ReadAssets AssetLists="@(AssetLists)"
			AssetPath="$(OutputPath)Assets\">
			<Output TaskParameter="Assets"
				ItemName="Solaestas-AssetFile" />
		</ReadAssets>
		<ReadResources ResourceLists="@(ResourceLists)">
			<Output TaskParameter="Resources"
				ItemName="Solaestas-ResourceFile" />
		</ReadResources>
	</Target>

</Project>