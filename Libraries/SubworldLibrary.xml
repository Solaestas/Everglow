<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SubworldLibrary</name>
    </assembly>
    <members>
        <member name="M:SubworldLibrary.ICopyWorldData.CopyMainWorldData">
            <summary>
            Called on all content with this interface before <see cref="M:SubworldLibrary.Subworld.OnEnter"/>, and after <see cref="M:SubworldLibrary.Subworld.OnExit"/>.
            <br/>This is where you copy data from the main world to a subworld, via <see cref="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)"/>.
            <code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.ICopyWorldData.ReadCopiedMainWorldData">
            <summary>
            Called on all content with this interface before a subworld generates, or after a subworld loads from file.
            <br/>This is where you read data copied from the main world to a subworld, via <see cref="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)"/>.
            <code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.Width">
            <summary>
            The subworld's width.
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.Height">
            <summary>
            The subworld's height.
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.Tasks">
            <summary>
            The subworld's generation tasks.
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.ReturnDestination">
            <summary>
            The index of the subworld the player will be sent to when choosing to return. See <see cref="M:SubworldLibrary.SubworldSystem.GetIndex``1"/>.
            <br/>Set to -1 to send the player back to the main world.
            <br/>Set to <see cref="F:System.Int32.MinValue"/> to send the player to the main menu.
            <br/>Default: -1
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.ShouldSave">
            <summary>
            Whether the subworld should save or not.
            <br/>Default: false
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.NoPlayerSaving">
            <summary>
            Reverts changes to players when they leave the subworld.
            <br/>Default: false
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.NormalUpdates">
            <summary>
            Completely disables vanilla world updating in the subworld.
            <br/>Do not enable unless you are replicating a standard world!
            <br/>Default: false
            </summary>
        </member>
        <member name="P:SubworldLibrary.Subworld.ManualAudioUpdates">
            <summary>
            If <see cref="M:SubworldLibrary.Subworld.ChangeAudio"/> returns true, this completely disables vanilla audio updating.
            <br/>Typically not required. Only enable this if you know what you are doing.
            <br/>Default: false
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.OnEnter">
            <summary>
            Called when entering a subworld.
            <br/>Before this is called, the return button and underworld's visibility are reset.
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.OnExit">
            <summary>
            Called when exiting a subworld.
            <br/>After this is called, the return button and underworld's visibility are reset.
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.CopyMainWorldData">
            <summary>
            Called on all subworlds before <see cref="M:SubworldLibrary.Subworld.OnEnter"/>, and after <see cref="M:SubworldLibrary.Subworld.OnExit"/>.
            <br/>This is where you copy data from the main world to the subworld, via <see cref="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)"/>.
            <code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.CopySubworldData">
            <summary>
            Called before <see cref="M:SubworldLibrary.Subworld.OnExit"/>.
            <br/>This is where you copy data from the subworld to another world, via <see cref="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)"/>.
            <code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.ReadCopiedMainWorldData">
            <summary>
            Called on all subworlds before one generates, or after one loads from file.
            <br/>This is where you read data copied from the main world to the subworld, via <see cref="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)"/>.
            <code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.ReadCopiedSubworldData">
            <summary>
            Called while leaving the subworld, either before a different world generates, or after a different world loads from file.
            <br/>This is where you read data copied from the subworld to another world, via <see cref="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)"/>.
            <code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.OnLoad">
            <summary>
            Called after the subworld generates or loads from file.
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.OnUnload">
            <summary>
            Called while leaving the subworld, before a different world either generates or loads from file.
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.ReadFile(System.IO.BinaryReader)">
            <summary>
            Requires knowledge of how vanilla world file loading works to use properly! Only override this if you know what you are doing.
            </summary>
            <returns>The exit status. A number above 0 indicates that world file reading has failed.</returns>
        </member>
        <member name="M:SubworldLibrary.Subworld.PostReadFile">
            <summary>
            Requires knowledge of how vanilla world file loading works to use properly! Only override this if you know what you are doing.
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.DrawSetup(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Corrects zoom and clears the screen, then calls DrawMenu and draws the cursor.
            <code>
            PlayerInput.SetZoom_UI();
            Main.instance.GraphicsDevice.Clear(Color.Black);
            Main.spriteBatch.Begin(SpriteSortMode.Deferred, BlendState.AlphaBlend, SamplerState.LinearClamp, DepthStencilState.None, Main.Rasterizer, null, Main.UIScaleMatrix);
            DrawMenu(gameTime);
            Main.DrawCursor(Main.DrawThickCursor());
            Main.spriteBatch.End();
            </code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.DrawMenu(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called by DrawSetup to draw the subworld's loading menu.
            <br/>Defaults to text on a black background.
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.ChangeAudio">
            <summary>
            Called before music is chosen, including in the loading menu.
            <br/>Return true to disable vanilla behaviour, allowing for modification of variables such as <see cref="F:Terraria.Main.newMusic"/>.
            <br/>Default: false
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.GetGravity(Terraria.Entity)">
            <summary>
            Controls the gravity of an entity in the subworld.
            <br/>Default: 1
            </summary>
        </member>
        <member name="M:SubworldLibrary.Subworld.GetLight(Terraria.Tile,System.Int32,System.Int32,Terraria.Utilities.FastRandom@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Controls how a tile in the subworld is lit.
            <br/>Return true to disable vanilla behaviour.
            <br/>Default: false
            </summary>
        </member>
        <member name="F:SubworldLibrary.SubworldSystem.noReturn">
            <summary>
            Hides the Return button.
            <br/>Its value is reset before <see cref="M:SubworldLibrary.Subworld.OnEnter"/> is called, and after <see cref="M:SubworldLibrary.Subworld.OnExit"/> is called.
            </summary>
        </member>
        <member name="F:SubworldLibrary.SubworldSystem.hideUnderworld">
            <summary>
            Hides the Underworld background.
            <br/>Its value is reset before <see cref="M:SubworldLibrary.Subworld.OnEnter"/> is called, and after <see cref="M:SubworldLibrary.Subworld.OnExit"/> is called.
            </summary>
        </member>
        <member name="P:SubworldLibrary.SubworldSystem.Current">
            <summary>
            The current subworld.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.IsActive(System.String)">
            <summary>
            Returns true if the current subworld's ID matches the specified ID.
            <code>SubworldSystem.IsActive("MyMod/MySubworld")</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.IsActive``1">
            <summary>
            Returns true if the specified subworld is active.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.AnyActive">
            <summary>
            Returns true if not in the main world.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.AnyActive(Terraria.ModLoader.Mod)">
            <summary>
            Returns true if the current subworld is from the specified mod.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.AnyActive``1">
            <summary>
            Returns true if the current subworld is from the specified mod.
            </summary>
        </member>
        <member name="P:SubworldLibrary.SubworldSystem.CurrentPath">
            <summary>
            The current subworld's file path.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.Enter(System.String)">
            <summary>
            Tries to enter the subworld with the specified ID.
            <code>SubworldSystem.Enter("MyMod/MySubworld")</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.Enter``1">
            <summary>
            Enters the specified subworld.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.Exit">
            <summary>
            Exits the current subworld.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.MovePlayerToSubworld(System.String,System.Int32)">
            <summary>
            Tries to send the specified player to the subworld with the specified ID.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.MovePlayerToSubworld``1(System.Int32)">
            <summary>
            Sends the specified player to the specified subworld.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.StartSubserver(System.Int32)">
            <summary>
            Starts a subserver for the subworld with the specified ID, if one is not running already.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.GetIndex(System.String)">
            <summary>
            Tries to get the index of the subworld with the specified ID.
            <br/> Typically used for <see cref="P:SubworldLibrary.Subworld.ReturnDestination"/>.
            <br/> Returns <see cref="F:System.Int32.MinValue"/> if the subworld couldn't be found.
            <code>public override int ReturnDestination => SubworldSystem.GetIndex("MyMod/MySubworld");</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.GetIndex``1">
            <summary>
            Gets the index of the specified subworld.
            <br/> Typically used for <see cref="P:SubworldLibrary.Subworld.ReturnDestination"/>.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.SendToSubserver(System.Int32,Terraria.ModLoader.Mod,System.Byte[])">
            <summary>
            Sends a packet from the specified mod directly to a subserver.
            <br/> Use <see cref="M:SubworldLibrary.SubworldSystem.GetIndex(System.String)"/> to get the subserver's ID.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.SendToAllSubservers(Terraria.ModLoader.Mod,System.Byte[])">
            <summary>
            Sends a packet from the specified mod directly to all subservers.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.SendToAllSubserversFromMod(Terraria.ModLoader.Mod,System.Byte[])">
            <summary>
            Sends a packet from the specified mod directly to all subservers added by that mod.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.SendToMainServer(Terraria.ModLoader.Mod,System.Byte[])">
            <summary>
            Sends a packet from the specified mod directly to the main server.
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)">
            <summary>
            Can only be called in <see cref="M:SubworldLibrary.Subworld.CopyMainWorldData"/> or <see cref="M:SubworldLibrary.Subworld.OnExit"/>!
            <br/>Stores data to be transferred between worlds under the specified key, if that key is not already in use.
            <br/>Naming the key after the variable pointing to the data is highly recommended to avoid redundant copying. This can be done automatically with nameof().
            <code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
            </summary>
        </member>
        <member name="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)">
            <summary>
            Can only be called in <see cref="M:SubworldLibrary.Subworld.ReadCopiedMainWorldData"/> or <see cref="M:SubworldLibrary.Subworld.ReadCopiedSubworldData"/>!
            <br/>Reads data copied from another world stored under the specified key.
            <code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
            </summary>
        </member>
    </members>
</doc>
